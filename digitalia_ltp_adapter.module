<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\digitalia_ltp_adapter\DigitaliaLtpUtils;
use Drupal\node\Entity\Node;


/**
 * implements hook_entity_presave()
 */
function digitalia_ltp_adapter_entity_presave(EntityInterface $entity)
{
	dpm("Entity presave hook");

	$debug_settings = array(
		'media_toggle' => true,
		'ingest_toggle' => true,
		'language_toggle' => false,
	);

	$utils = new DigitaliaLtpUtils($debug_settings);

	if (!$utils->getConfig()->get('auto_generate_switch')) {
		return;
	}


	if ($utils->getEnabledContentTypes()[$entity->bundle()]) {

		// TODO: deal with languages
		$export_entity = $entity;
		if ($entity->getEntityTypeId() == "media") {
			// TODO: deal with multiple media and only single updated
			$parent_id = $entity->get("field_media_of")->first()->getValue()["target_id"];
			// is media always child of node?
			$export_entity = \Drupal::entityTypeManager()->getStorage('node')->load($parent_id);
		}

		if (!$entity->get("status")->first()->getValue()['value'] || !$export_entity->get("status")->first()->getValue()['value']) {
			dpm("Entity IS NOT published");
			return;
		}


		$directories = $utils->archiveData($export_entity, $utils::Separate);
		$utils->startIngest($directories);
	}
}
