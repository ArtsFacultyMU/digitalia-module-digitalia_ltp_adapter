<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\digitalia_ltp_adapter\DigitaliaLtpUtils;
use Drupal\node\Entity\Node;


/**
 * Transfer published objects to LTP system
 *
 * implements hook_entity_presave()
 */
function digitalia_ltp_adapter_entity_presave(EntityInterface $entity)
{

	$utils = new DigitaliaLtpUtils();
	//dpm(print_r($utils->getEnabledContentTypes(), true));

	if (!$utils->getEnabledContentTypes()[$entity->bundle()]) {
		return;
	}

	dpm("Entity update hook");
	\Drupal::logger('digitalia_ltp_adapter')->debug("Entity update hook");
	\Drupal::logger('digitalia_ltp_adapter')->debug("Bundle: " . $entity->bundle());


	// Don't archive when writing last transfer uuid
	$transfer_field_name = $utils->getConfig()->get('transfer_field');
	$sip_field_name = $utils->getConfig()->get('sip_field');
	$transfer_uuid = $utils->getEntityField($entity, $transfer_field_name);
	$sip_uuid = $utils->getEntityField($entity, $sip_field_name);

	//dpm("transfer uuid:" . print_r($transfer_uuid, TRUE));
	//dpm("sip uuid: " . print_r($sip_uuid, TRUE));

	if (strpos($transfer_uuid, "SAVE_") !== false) {
		$clean_uuid = substr($transfer_uuid, strlen("SAVE_"));
		dpm("clean transfer_uuid: " . $clean_uuid);
		$entity->set($transfer_field_name, $clean_uuid);
		return;
	}

	if (strpos($sip_uuid, "SAVE_") !== false) {
		$clean_uuid = substr($sip_uuid, strlen("SAVE_"));
		dpm("clean sip_uuid: " . $clean_uuid);
		$entity->set($sip_field_name, $clean_uuid);
		return;
	}

	$utils->updateEntity($entity, $utils::UPDATE_CREATE);
}

/**
 * Transfer deleted objects to LTP system and mark them as deleted
 *
 * implements hook_entity_predelete()
 */
function digitalia_ltp_adapter_entity_predelete(EntityInterface $entity)
{
	dpm("Entity predelete hook");
	\Drupal::logger('digitalia_ltp_adapter')->debug("Entity predelete hook");
	\Drupal::logger('digitalia_ltp_adapter')->debug("Bundle: " . $entity->bundle());

	$utils = new DigitaliaLtpUtils();

	if (!$utils->getEnabledContentTypes()[$entity->bundle()]) {
		return;
	}

	$utils->updateEntity($entity, $utils::UPDATE_DELETE);
}

/**
 * implements hook_cron()
 */
function digitalia_ltp_adapter_cron()
{
	dpm("Cron hook");
}
